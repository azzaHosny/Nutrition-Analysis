//
//  AddIngredientsViewController.swift
//  Nutrition Analysis
//
//  Created by azah on 6/25/21.
//  Copyright (c) azah mahgoub. All rights reserved.
//
//  This file was generated by the Xcode Templates so
//  you can apply clean architecture with MVVMC to your iOS and Mac projects.

import UIKit
import RxSwift

class AddIngredientsViewController: UIViewController {
    
    let dispoasBag = DisposeBag()
    private var result: Disposable?
    private let viewModel: AddIngredientsViewModel
    
    // MARK: Outlets
    
    @IBOutlet weak var ingredientTextView: UITextView!
    @IBAction func analyzeDidPressed(_ sender: Any) {
        viewModel.getIngredientList(ingredientText: ingredientTextView.text)
    }
    
    init(viewModel: AddIngredientsViewModel) {
        self.viewModel = viewModel
        super.init(nibName: "AddIngredientsViewController", bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        subscribeForSubjectOnViewModel()
    }
    
    func subscribeForSubjectOnViewModel() {
        result = viewModel.behavioralSbj
            .subscribe { [weak self] event in
            guard let self = self else { return }
            if let element = event.element {
                self.configureUI(status: element)
            }
        }
        result?
            .disposed(by: dispoasBag)
    }
    
    func configureUI(status: AddIngredientsViewModelStatus) {
        switch status {
        case .fail:
            UIUtils.removeLoadingIndicator(viewController: self)
        case .sucess(let data):
            UIUtils.removeLoadingIndicator(viewController: self)
            viewModel.passDatasourceToCordinator(datasource: data)
        case .loading:
            break
        }
        
    }
}


